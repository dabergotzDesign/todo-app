{"version":3,"sources":["components/header.js","components/todo-item.js","components/todo-list.js","components/todo-form.js","helpers.js","modules/storage.js","components/app.js","components/help.js","components/not-found.js","components/router.js","index.js"],"names":["Header","props","className","tagline","ToDoItem","e","keyCode","target","blur","todo","this","data","data-id","uuid","value","id","type","checked","done","onChange","toggleToDoDone","htmlFor","text","updateToDoText","onKeyUp","handleKeyUp","onClick","removeToDo","React","Component","ToDoList","Object","keys","items","map","key","ToDoForm","textInput","createRef","handleSubmit","preventDefault","current","trim","addToDo","currentTarget","reset","onSubmit","placeholder","ref","aria-hidden","getRandomTagline","Math","floor","random","length","canUseLocalStorage","Error","localStorage","setItem","defaultValue","getItem","test","removeItem","App","setState","state","toDoItems","checkbox","storageKey","old","Storage","get","JSON","parse","set","stringify","Help","document","title","NotFound","Router","basename","exact","path","component","ReactDOM","render","getElementById"],"mappings":"+QAWeA,EATA,SAAAC,GACb,OACE,4BAAQC,UAAU,UAChB,2CACA,0BAAMA,UAAU,WAAWD,EAAME,WCqDxBC,E,oLAxDDC,GAEQ,KAAdA,EAAEC,SACJD,EAAEE,OAAOC,S,+BAGH,IAAD,OACDC,EAAOC,KAAKT,MAAMU,KAExB,OACE,wBAAIT,UAAU,YAAYU,UAASH,EAAKI,MACtC,4BAEE,yBAAKX,UAAU,kCACb,2BACEA,UAAU,uBACVY,MAAOL,EAAKI,KACZE,GAAE,oBAAeN,EAAKI,MACtBG,KAAK,WACLC,QAASR,EAAKS,KACdC,SAAUT,KAAKT,MAAMmB,iBAEvB,2BACElB,UAAU,uBACVmB,QAAO,oBAAeZ,EAAKI,OAF7B,UASJ,4BACE,2BACEG,KAAK,OACLd,UAAU,eACVY,MAAOL,EAAKa,KACZH,SAAU,SAAAd,GACR,EAAKJ,MAAMsB,eAAed,EAAKI,KAAMR,EAAEE,OAAOO,QAEhDU,QAAS,SAAAnB,GACP,EAAKoB,YAAYpB,OAKvB,wBAAIH,UAAU,cACZ,uBACEA,UAAU,+BACVwB,QAAS,SAAArB,GAAC,OAAI,EAAKJ,MAAM0B,WAAWlB,EAAKI,e,GAjD9Be,IAAMC,WCuBdC,E,iLArBH,IAAD,OACP,OACE,yBAAK5B,UAAU,aACb,2BAAOA,UAAU,sCACf,+BACG6B,OAAOC,KAAKtB,KAAKT,MAAMgC,OAAOC,KAAI,SAAArB,GAAI,OACrC,kBAAC,EAAD,CACEsB,IAAG,oBAAetB,GAClBF,KAAM,EAAKV,MAAMgC,MAAMpB,GACvBU,eAAgB,EAAKtB,MAAMsB,eAC3BH,eAAgB,EAAKnB,MAAMmB,eAC3BO,WAAY,EAAK1B,MAAM0B,uB,GAZhBC,IAAMC,WCoCdO,E,2MA9BbC,UAAYT,IAAMU,Y,EAElBC,aAAe,SAAAlC,GACbA,EAAEmC,iBACF,IAAMlB,EAAO,EAAKe,UAAUI,QAAQ3B,MAAM4B,OAC1C,EAAKzC,MAAM0C,QAAQrB,GACnBjB,EAAEuC,cAAcC,S,wEAKhB,OACE,0BAAM3C,UAAU,mBAAmB4C,SAAUpC,KAAK6B,cAChD,2BACErC,UAAU,eACVc,KAAK,OACL+B,YAAY,0BACZC,IAAKtC,KAAK2B,YAEZ,yBAAKnC,UAAU,sBACb,4BAAQA,UAAU,4BAA4Bc,KAAK,UACjD,uBAAGd,UAAU,cAAc+C,cAAY,SADzC,sB,GA3BarB,IAAMC,W,iBCEtB,SAASqB,IACd,IALuBvC,EAWvB,OAXuBA,EAKN,CACf,iCACA,oCACA,mCACA,iCARUwC,KAAKC,MAAMD,KAAKE,SAAW1C,EAAK2C,S,IC6B/B,M,WA7Bb,aACE,GADa,qBACR5C,KAAK6C,qBACR,MAAMC,MAAM,yC,gDAGZrB,EAAKrB,GACP2C,aAAaC,QAAQvB,EAAKrB,K,0BAExBqB,GAA2B,IAAtBwB,EAAqB,uDAAN,KAChB7C,EAAQ2C,aAAaG,QAAQzB,GAEnC,OAAc,OAAVrB,EACKA,EAEF6C,I,2CAGP,IAAIE,EAAO,iBAEX,IACEJ,aAAaC,QAAQG,EAAMA,GAC3BJ,aAAaK,WAAWD,GACxB,MAAOxD,GACP,OAAO,EAET,OAAO,M,MCoDI0D,E,YArEb,WAAY9D,GAAQ,IAAD,uBACjB,4CAAMA,KAkBR0C,QAAU,SAAArB,GACR,IAAMb,EAAO,CACXI,KAAMA,MACNS,KAAMA,EACNJ,MAAM,GAER,EAAK8C,UAAS,SAAAC,GAEZ,OADAA,EAAMC,UAAUzD,EAAKI,MAAQJ,EACtBwD,MA3BQ,EA+BnB1C,eAAiB,SAACV,EAAMS,GACtB,EAAK0C,UAAS,SAAAC,GAEZ,OADAA,EAAMC,UAAUrD,GAAMS,KAAOA,EACtB2C,MAlCQ,EAsCnB7C,eAAiB,SAAAf,GACf,IAAM8D,EAAW9D,EAAEE,OACnB,EAAKyD,UAAS,SAAAC,GAEZ,OADAA,EAAMC,UAAUC,EAASrD,OAAOI,KAAOiD,EAASlD,QACzCgD,MA1CQ,EA8CnBtC,WAAa,SAAAd,GACX,EAAKmD,UAAS,SAAAC,GAEZ,cADOA,EAAMC,UAAUrD,GAChBoD,MA/CT,EAAKG,WAAa,aAClB,IAAMC,EAAMC,EAAQC,IAAI,EAAKH,YAHZ,OAMf,EAAKH,MADHI,EACWG,KAAKC,MAAMJ,GAEX,CACXH,UAAW,IATE,E,kFAgBjBI,EAAQI,IAAIhE,KAAK0D,WAAYI,KAAKG,UAAUjE,KAAKuD,U,+BAsCjD,OACE,yBAAK/D,UAAU,aACb,kBAAC,EAAD,CAAQC,QAAS+C,MACjB,kBAAC,EAAD,CAAUP,QAASjC,KAAKiC,UACxB,kBAAC,EAAD,CACEV,MAAOvB,KAAKuD,MAAMC,UAClB3C,eAAgBb,KAAKa,eACrBH,eAAgBV,KAAKU,eACrBO,WAAYjB,KAAKiB,kB,GA/DTC,IAAMC,WCUT+C,E,4LAbXC,SAASC,MAAQ,uB,+BAGjB,OACE,yBAAK5E,UAAU,aACb,kBAAC,EAAD,CAAQC,QAAQ,0CAChB,wDACA,6F,GATWyB,IAAMC,WCoBVkD,E,4LAlBXF,SAASC,MAAQ,4B,+BAGjB,OACE,yBAAK5E,UAAU,aACb,kBAAC,EAAD,CAAQC,QAAQ,yBAChB,yBAAKD,UAAU,uBACb,gDAEE,8BAHJ,+C,GARe0B,IAAMC,WCadmD,EAVA,kBACb,kBAAC,IAAD,CAAYC,SAAS,KACnB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWrB,IACjC,kBAAC,IAAD,CAAOoB,KAAK,QAAQC,UAAWR,IAC/B,kBAAC,IAAD,CAAOQ,UAAWL,O,MCCxBM,IAASC,OAAO,kBAAC,EAAD,MAAYT,SAASU,eAAe,W","file":"static/js/main.a53eb506.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Header = props => {\n  return (\n    <header className=\"header\">\n      <h1>What to do?</h1>\n      <span className=\"tagline\">{props.tagline}</span>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nclass ToDoItem extends React.Component {\n  handleKeyUp(e) {\n    //removes focus when [ENTER] key is pressed\n    if (e.keyCode === 13) {\n      e.target.blur();\n    }\n  }\n  render() {\n    const todo = this.props.data;\n\n    return (\n      <tr className=\"todo-item\" data-id={todo.uuid}>\n        <td>\n          {/* CHECKBOX */}\n          <div className=\"custom-control custom-checkbox\">\n            <input\n              className=\"custom-control-input\"\n              value={todo.uuid}\n              id={`todo-done-${todo.uuid}`}\n              type=\"checkbox\"\n              checked={todo.done}\n              onChange={this.props.toggleToDoDone}\n            />\n            <label\n              className=\"custom-control-label\"\n              htmlFor={`todo-done-${todo.uuid}`}\n            >\n              &nbsp;\n            </label>\n          </div>\n        </td>\n        {/*TO DO  & UPDATE TEXT  */}\n        <td>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            value={todo.text}\n            onChange={e => {\n              this.props.updateToDoText(todo.uuid, e.target.value);\n            }}\n            onKeyUp={e => {\n              this.handleKeyUp(e);\n            }}\n          />\n        </td>\n        {/* DELETE TO DO */}\n        <td className=\"col-action\">\n          <i\n            className=\"icon-remove far fa-trash-alt\"\n            onClick={e => this.props.removeToDo(todo.uuid)}\n          />\n        </td>\n      </tr>\n    );\n  }\n}\n\nexport default ToDoItem;\n","import React from \"react\";\nimport ToDoItem from \"./todo-item\";\n\nclass ToDoList extends React.Component {\n  render() {\n    return (\n      <div className=\"todo-list\">\n        <table className=\"todo-items  table table-borderless\">\n          <tbody>\n            {Object.keys(this.props.items).map(uuid => (\n              <ToDoItem\n                key={`todo-item-${uuid}`}\n                data={this.props.items[uuid]}\n                updateToDoText={this.props.updateToDoText}\n                toggleToDoDone={this.props.toggleToDoDone}\n                removeToDo={this.props.removeToDo}\n              />\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default ToDoList;\n","import React from \"react\";\n\nclass ToDoForm extends React.Component {\n  //   constructor(props) {\n  //     super(props);\n\n  //     this.handleSubmit = this.handleSubmit.bind(this);\n  //   }\n\n  textInput = React.createRef();\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const text = this.textInput.current.value.trim();\n    this.props.addToDo(text);\n    e.currentTarget.reset();\n    //console.log(`Create new item: ${this.textInput.current.value}`);\n  };\n\n  render() {\n    return (\n      <form className=\"input-group my-3\" onSubmit={this.handleSubmit}>\n        <input\n          className=\"form-control\"\n          type=\"text\"\n          placeholder=\"Add a new to do item...\"\n          ref={this.textInput}\n        />\n        <div className=\"input-group-append\">\n          <button className=\"btn btn-outline-secondary\" type=\"submit\">\n            <i className=\"fas fa-plus\" aria-hidden=\"true\" />\n            &nbsp;Add Item\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default ToDoForm;\n","function randomArrayItem(data) {\n  return data[Math.floor(Math.random() * data.length)];\n}\n\nexport function getRandomTagline() {\n  const taglines = [\n    \"This could be your bucket list\",\n    \"This could be your Christmas list\",\n    \"This could be your shopping list\",\n    \"This could be your kill list\"\n  ];\n  return randomArrayItem(taglines);\n}\n","class Storage {\n  constructor() {\n    if (!this.canUseLocalStorage()) {\n      throw Error(\"The Local storage is full or disabled\");\n    }\n  }\n  set(key, value) {\n    localStorage.setItem(key, value);\n  }\n  get(key, defaultValue = null) {\n    const value = localStorage.getItem(key);\n\n    if (value !== null) {\n      return value;\n    }\n    return defaultValue;\n  }\n  canUseLocalStorage() {\n    let test = \"this is a test\";\n\n    try {\n      localStorage.setItem(test, test);\n      localStorage.removeItem(test);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n}\n\nexport default new Storage();\n","import React from \"react\";\nimport Header from \"./header\";\nimport ToDoList from \"./todo-list\";\nimport ToDoForm from \"./todo-form\";\nimport uuid from \"uuid/v4\";\nimport { getRandomTagline } from \"../helpers.js\";\nimport Storage from \"../modules/storage\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.storageKey = \"react-todo\";\n    const old = Storage.get(this.storageKey);\n\n    if (old) {\n      this.state = JSON.parse(old);\n    } else {\n      this.state = {\n        toDoItems: {}\n      };\n      // Storage.set(this.storageKey, JSON.stringify(this.state));\n    }\n  }\n\n  componentDidUpdate() {\n    Storage.set(this.storageKey, JSON.stringify(this.state));\n  }\n\n  addToDo = text => {\n    const todo = {\n      uuid: uuid(),\n      text: text,\n      done: false\n    };\n    this.setState(state => {\n      state.toDoItems[todo.uuid] = todo;\n      return state;\n    });\n  };\n\n  updateToDoText = (uuid, text) => {\n    this.setState(state => {\n      state.toDoItems[uuid].text = text;\n      return state;\n    });\n  };\n\n  toggleToDoDone = e => {\n    const checkbox = e.target;\n    this.setState(state => {\n      state.toDoItems[checkbox.value].done = checkbox.checked;\n      return state;\n    });\n  };\n\n  removeToDo = uuid => {\n    this.setState(state => {\n      delete state.toDoItems[uuid];\n      return state;\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Header tagline={getRandomTagline()} />\n        <ToDoForm addToDo={this.addToDo} />\n        <ToDoList\n          items={this.state.toDoItems}\n          updateToDoText={this.updateToDoText}\n          toggleToDoDone={this.toggleToDoDone}\n          removeToDo={this.removeToDo}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport Header from \"./header\";\n\nclass Help extends React.Component {\n  componentDidMount() {\n    document.title = \"HELP | What to do?\";\n  }\n  render() {\n    return (\n      <div className=\"container\">\n        <Header tagline=\"Your questions will be answered here.\" />\n        <p>Where is the data stored?</p>\n        <p>We store all information in your browsers' Local Storage.</p>\n      </div>\n    );\n  }\n}\n\nexport default Help;\n","import React from \"react\";\nimport Header from \"./header\";\n\nclass NotFound extends React.Component {\n  componentDidMount() {\n    document.title = \"Error 404 | What to do?\";\n  }\n  render() {\n    return (\n      <div className=\"container\">\n        <Header tagline=\"404 - Page not found\" />\n        <div className=\"alert alert-warning\">\n          <strong>\n            Oops...sorry!\n            <br />\n          </strong>\n          The Requested page could not be found.\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default NotFound;\n","import React from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport App from \"./app\";\nimport Help from \"./help\";\nimport NotFound from \"./not-found\";\n\nconst Router = () => (\n  <HashRouter basename=\"/\">\n    <Switch>\n      <Route exact path=\"/\" component={App} />\n      <Route path=\"/help\" component={Help} />\n      <Route component={NotFound} />\n    </Switch>\n  </HashRouter>\n);\n\nexport default Router;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport style from \"./sass/style.scss\";\nimport Router from \"./components/router\";\n\nimport \"@fortawesome/fontawesome-free/css/all.css\";\n\n//Components imports\n//import Header from \"./components/header.js\";\n//import ToDoList from \"./components/todo-list.js\";\n//import App from \"./components/app\";\n\nReactDOM.render(<Router />, document.getElementById(\"root\"));\n"],"sourceRoot":""}